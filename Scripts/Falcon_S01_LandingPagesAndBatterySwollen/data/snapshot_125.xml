<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="125">
  <HTTPTask id="5482" hostname="ppssupport-itgllbh7.inc.hp.com" path="/wcc-services/ssc/config/us-en/printerLanding" url="https://ppssupport-itgllbh7.inc.hp.com/wcc-services/ssc/config/us-en/printerLanding" ip="15.72.22.19" port="443" connectionId="4" origin="Primary" frame="1" startDateTime="2021-05-20T04:14:10.637+00:00" startTime="233932390" endTime="233932578">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHBzc3VwcG9ydC1pdGdsbGJoNy5pbmMuaHAuY29t</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IiBOb3QgQTtCcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9IjkwIiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjkwIg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-mobile" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PzA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkwLjAuNDQzMC4yMTIgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Site" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2FtZS1vcmlnaW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Mode" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y29ycw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Dest" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW1wdHk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9wcHNzdXBwb3J0LWl0Z2xsYmg3LmluYy5ocC5jb20vdXMtZW4vcHJpbnRlcg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC93Y2Mtc2VydmljZXMvc3NjL2NvbmZpZy91cy1lbi9wcmludGVyTGFuZGluZyBIVFRQLzEuMQ0KSG9zdDogcHBzc3VwcG9ydC1pdGdsbGJoNy5pbmMuaHAuY29tDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpzZWMtY2gtdWE6ICIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSI5MCIsICJHb29nbGUgQ2hyb21lIjt2PSI5MCINCkFjY2VwdDogYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qDQpzZWMtY2gtdWEtbW9iaWxlOiA/MA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkwLjAuNDQzMC4yMTIgU2FmYXJpLzUzNy4zNg0KU2VjLUZldGNoLVNpdGU6IHNhbWUtb3JpZ2luDQpTZWMtRmV0Y2gtTW9kZTogY29ycw0KU2VjLUZldGNoLURlc3Q6IGVtcHR5DQpSZWZlcmVyOiBodHRwczovL3Bwc3N1cHBvcnQtaXRnbGxiaDcuaW5jLmhwLmNvbS91cy1lbi9wcmludGVyDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xNC4y</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMCBNYXkgMjAyMSAwNDoxMzo0NCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Access-Control-Allow-Origin" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Kg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Access-Control-Allow-Credentials" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dHJ1ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>REVOWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Strict-Transport-Security" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT0xNTc2ODAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referrer-Policy" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tcmVmZXJyZXItd2hlbi1kb3duZ3JhZGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="14">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAyMCBNYXkgMjAyMSAwNDoxMzo0MyBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="15">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KU2VydmVyOiBuZ2lueC8xLjE0LjINCkRhdGU6IFRodSwgMjAgTWF5IDIwMjEgMDQ6MTM6NDQgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NClRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbjogKg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNClgtRnJhbWUtT3B0aW9uczogREVOWQ0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1YU1MtUHJvdGVjdGlvbjogMTsgbW9kZT1ibG9jaw0KU3RyaWN0LVRyYW5zcG9ydC1TZWN1cml0eTogbWF4LWFnZT0xNTc2ODAwMDsgaW5jbHVkZVN1YkRvbWFpbnM7IHByZWxvYWQNClJlZmVycmVyLVBvbGljeTogbm8tcmVmZXJyZXItd2hlbi1kb3duZ3JhZGUNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkV4cGlyZXM6IFRodSwgMjAgTWF5IDIwMjEgMDQ6MTM6NDMgR01UDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="4">
            <ActualData>eyJzdGF0dXMiOiJzdWNjZXNzIiwiZGF0YSI6eyJDSEFUX0JPVF9TSVRFX0hPTUVfRU5BQkxFRCI6eyJrZXlEZXNjIjoiQ0hBVF9CT1RfU0lURV9IT01FX0VOQUJMRUQiLCJrZXlWYWx1ZSI6InRydWUiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJPUFRJTUlaRUxZX1VSTCI6eyJrZXlEZXNjIjoiT1BUSU1JWkVMWV9VUkwiLCJrZXlWYWx1ZSI6Imh0dHBzOi8vY2RuLm9wdGltaXplbHkuY29tL2pzLzEwNDI1ODA2NDA5LmpzIiwiY2F0ZWdvcnlJZCI6MTMsInJlZ2lvbklkIjoxfSwiUEVSU09OQUxJU0FUSU9OX0xDIjp7ImtleURlc2MiOiJQRVJTT05BTElTQVRJT05fTEMiLCJrZXlWYWx1ZSI6ImVuLGVzLHB0LGphLGtvLHRoLHpoLGZpLGNzLGZyLGhlLGh1LGl0LG5sLG5vLHBsLHJ1LHN2LHRyLGFyLGRhLGRlLGVsLGJnLGV0LGhyLGx2LGx0LHJvLHNsLHNrLHNyLHpoLWhhbnMsemgtaGFudCxhcixoZSx1ayIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIlRPUk9OVE9fQk9UX01PQklMRV9VUkwiOnsia2V5RGVzYyI6IlRPUk9OVE9fQk9UX01PQklMRV9VUkwiLCJrZXlWYWx1ZSI6Imh0dHBzOi8vY2NpLWJvdHNlcnZpY2UtaHAtaW50LmF6dXJld2Vic2l0ZXMubmV0Lz9lbnY9aW50JkJvdENsaWVudD1tb2JpbGV3aWRnZXQiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJDSEFUX0JPVF91c19lbiI6eyJrZXlEZXNjIjoiQ0hBVF9CT1RfdXNfZW4iLCJrZXlWYWx1ZSI6IkFsbCIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIkJSSUdIVENPVkVfUE9MSUNZX0tFWSI6eyJrZXlEZXNjIjoiQlJJR0hUQ09WRV9QT0xJQ1lfS0VZIiwia2V5VmFsdWUiOiJCQ3BrQURhd3FNM0dzZ3ZNZTNNRVpWa3FHQ1l3cVRsd3hqR0ItT0F4eVNpNlNHQUt5eG8xd2JDWkNsM1FjX2NUb3ExcllOVlhJNTM4bGljT1QwNDUzUk9weUYxaGRLZnpjZFlOQTRtYUozNF90azJuanhNU25uNHhnR2x4UGFnTzZlSmJSM1l4YmswZEpQbzIiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJXQ0NfUVVBTFRSSUNTX1VSTCI6eyJrZXlEZXNjIjoiV0NDX1FVQUxUUklDU19VUkwiLCJrZXlWYWx1ZSI6Imh0dHBzOi8vaHBzdXBwb3J0LnF1YWx0cmljcy5jb20vamZlL2Zvcm0vU1ZfNUJaamhnbTRMRGx4T2xMP1FfQ0hMPXNpJlFfbGFuZyIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIldDQ19GSU5ETU9SRV9ET0NfTElOSyI6eyJrZXlEZXNjIjoiV0NDX0ZJTkRNT1JFX0RPQ19MSU5LIiwia2V5VmFsdWUiOiIvdXMtZW4vZG9jdW1lbnQvYzA1MDYxMTk5IiwiY2F0ZWdvcnlJZCI6MTMsInJlZ2lvbklkIjo5NX0sIkJSSUdIVENPVkVfUExBWUVSX0lEIjp7ImtleURlc2MiOiJCUklHSFRDT1ZFX1BMQVlFUl9JRCIsImtleVZhbHVlIjoiQnlMV1VpMEEiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJGQUxDT05fS0FBU19UWVBFQUhFQURfQ0hJTkVTRV9VUkwiOnsia2V5RGVzYyI6IkZBTENPTl9LQUFTX1RZUEVBSEVBRF9DSElORVNFX1VSTCIsImtleVZhbHVlIjoiP3E9PHRleHQ+JnJlc3VsdExpbWl0PTEwJnN0b3JlPXRtc3N0b3JlJmxhbmd1YWdlQ29kZT08TEFORz4sZW4mZmlsdGVycz1jbGFzczoocG1fc2VyaWVzX3ZhbHVlJTVFPEJJQVNWQUw+IE9SIHBtX25hbWVfdmFsdWUgT1IgcG1fbnVtYmVyX3ZhbHVlKSUyMEFORCUyMChoaWRkZW5wcm9kdWN0Om5vJTIwT1IlMjAoJTIxX2V4aXN0c186aGlkZGVucHJvZHVjdCkpPFBBR0VfRklMVEVSXzE+JnByaW50RmllbGRzPXRtc3Btc2VyaWVzdmFsdWUsdG1zcG1uYW1ldmFsdWUsdG1zcG1udW1iZXJ2YWx1ZSxjbGFzcyxwcm9kdWN0aWQsdGl0bGUsdG1zbm9kZWRlcHRoLHNlb2ZyaWVuZGx5bmFtZSxuYXZpZ2F0aW9ucGF0aCxzaG9ydGVzdG5hdmlnYXRpb25wYXRoLGNoaWxkbm9kZXMsYWN0aXZld2Vic3VwcG9ydGZsYWcsaGlzdG9yaWNhbHdlYnN1cHBvcnRmbGFnLGJvZHkiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJCUklHSFRDT1ZFX1BMQVlFUl9VUkwiOnsia2V5RGVzYyI6IkJSSUdIVENPVkVfUExBWUVSX1VSTCIsImtleVZhbHVlIjoiaHR0cHM6Ly9wbGF5ZXJzLmJyaWdodGNvdmUubmV0L3thY2NvdW50SWR9L0J5TFdVaTBBX2RlZmF1bHQvaW5kZXguaHRtbD92aWRlb0lkPXJlZjp7dmlkZW9JZH0iLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJFTkFCTEVfS05PV0xFREdFX1NFQVJDSCI6eyJrZXlEZXNjIjoiRU5BQkxFX0tOT1dMRURHRV9TRUFSQ0giLCJrZXlWYWx1ZSI6InNpdGVIb21lLHByaW50ZXJMYW5kaW5nLGNvbXB1dGVyTGFuZGluZyxwcmludGVyU2V0dXAsdG9waWNMYW5kaW5nUGFnZSx0b3BpY1BhZ2UiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJNQVNUSUZGX1NQT1NfQkxBQ0tMSVNUX1BSSU5URVJfTEFORElOR19ORVciOnsia2V5RGVzYyI6Ik1BU1RJRkZfU1BPU19CTEFDS0xJU1RfUFJJTlRFUl9MQU5ESU5HX05FVyIsImtleVZhbHVlIjoiYXItZXMsZW1lYV9taWRkbGVfZWFzdC1hciIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIkZBTENPTl9LQUFTX1RZUEVBSEVBRF9FTkdMSVNIX1VSTCI6eyJrZXlEZXNjIjoiRkFMQ09OX0tBQVNfVFlQRUFIRUFEX0VOR0xJU0hfVVJMIiwia2V5VmFsdWUiOiI/cT08dGV4dD4mcmVzdWx0TGltaXQ9MTAmc3RvcmU9dG1zc3RvcmUmbGFuZ3VhZ2VDb2RlPWVuJmZpbHRlcnM9Y2xhc3M6KHBtX3Nlcmllc192YWx1ZSU1RTxCSUFTVkFMPiBPUiBwbV9uYW1lX3ZhbHVlIE9SIHBtX251bWJlcl92YWx1ZSklMjBBTkQlMjAoaGlkZGVucHJvZHVjdDpubyUyME9SJTIwKCUyMV9leGlzdHNfOmhpZGRlbnByb2R1Y3QpKTxQQUdFX0ZJTFRFUl8xPiZwcmludEZpZWxkcz10bXNwbXNlcmllc3ZhbHVlLHRtc3BtbmFtZXZhbHVlLHRtc3BtbnVtYmVydmFsdWUsY2xhc3MscHJvZHVjdGlkLHRpdGxlLHRtc25vZGVkZXB0aCxzZW9mcmllbmRseW5hbWUsbmF2aWdhdGlvbnBhdGgsc2hvcnRlc3RuYXZpZ2F0aW9ucGF0aCxjaGlsZG5vZGVzLGFjdGl2ZXdlYnN1cHBvcnRmbGFnLGhpc3RvcmljYWx3ZWJzdXBwb3J0ZmxhZyxib2R5IiwiY2F0ZWdvcnlJZCI6MTMsInJlZ2lvbklkIjoxfSwiRkFMQ09OX0tBQVNfVFlQRUFIRUFEX05PTl9FTkdMSVNIX1VSTCI6eyJrZXlEZXNjIjoiRkFMQ09OX0tBQVNfVFlQRUFIRUFEX05PTl9FTkdMSVNIX1VSTCIsImtleVZhbHVlIjoiP3E9PHRleHQ+JnJlc3VsdExpbWl0PTEwJnN0b3JlPXRtc3N0b3JlJmxhbmd1YWdlQ29kZT08TEFORz4sZW4mZmlsdGVycz1jbGFzczoocG1fc2VyaWVzX3ZhbHVlJTVFPEJJQVNWQUw+IE9SIHBtX25hbWVfdmFsdWUgT1IgcG1fbnVtYmVyX3ZhbHVlKSUyMEFORCUyMChoaWRkZW5wcm9kdWN0Om5vJTIwT1IlMjAoJTIxX2V4aXN0c186aGlkZGVucHJvZHVjdCkpPFBBR0VfRklMVEVSXzE+JnByaW50RmllbGRzPXRtc3Btc2VyaWVzdmFsdWUsdG1zcG1uYW1ldmFsdWUsdG1zcG1udW1iZXJ2YWx1ZSxjbGFzcyxwcm9kdWN0aWQsdGl0bGUsdG1zbm9kZWRlcHRoLHNlb2ZyaWVuZGx5bmFtZSxuYXZpZ2F0aW9ucGF0aCxzaG9ydGVzdG5hdmlnYXRpb25wYXRoLGNoaWxkbm9kZXMsYWN0aXZld2Vic3VwcG9ydGZsYWcsaGlzdG9yaWNhbHdlYnN1cHBvcnRmbGFnLGJvZHkiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJETURfQ0MiOnsia2V5RGVzYyI6IkRNRF9DQyIsImtleVZhbHVlIjoidXMsbGFtZXJpY2FfbnNjX2NhcmliLG15LG56LHBoLHNnLHRoLHZuLGF1LGlkLGluLGhrLGJnLGVlLGVtZWFfYWZyaWNhLGVtZWFfbWlkZGxlX2Vhc3QsZ2IsaHIsaWUsbHQsbHYscm8scnMsc2ksc2ssaHIsemEsYXIsYm8sY2wsY28sZWMsZXMsbGFtZXJpY2FfbnNjX2NudF9hbWVyLG14LHBlLHByLHB5LHV5LHZlLGJyLHB0LGpwLGtyLHRoLGNuLGhrLHR3LGZpLGN6LGZyLGJlLGNoLGVtZWFfYWZyaWNhLGlsLGh1LGl0LGJlLG5sLG5vLHBsLGJ5LGt6LHJ1LHVhLHNlLHRyLGVtZWFfbWlkZGxlX2Vhc3QsZGssZGUsYXQsY2giLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJLQUFTX0JJQVNWQUxfVkFMIjp7ImtleURlc2MiOiJLQUFTX0JJQVNWQUxfVkFMIiwia2V5VmFsdWUiOiIxLjEiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9LCJCUklHSFRDT1ZFX0FDQ09VTlRfSUQiOnsia2V5RGVzYyI6IkJSSUdIVENPVkVfQUNDT1VOVF9JRCIsImtleVZhbHVlIjoiMTE2MDQzODcwNjAwMSIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIkdFVF9UT19LTk9XX1dJTkRPV1NfVVJMIjp7ImtleURlc2MiOiJHRVRfVE9fS05PV19XSU5ET1dTX1VSTCIsImtleVZhbHVlIjoiaHR0cDovL3dpbmRvd3MubWljcm9zb2Z0LmNvbS9lbi11cy93aW5kb3dzLTgvaW5zdGFsbC1sYXRlc3QtdXBkYXRlLXdpbmRvd3MtOC0xIiwiY2F0ZWdvcnlJZCI6MiwicmVnaW9uSWQiOjk1fSwiS0FBU19QUk9EVUNUX1JFTEVWQU5DRV9ESUZGRVJFTkNFIjp7ImtleURlc2MiOiJLQUFTX1BST0RVQ1RfUkVMRVZBTkNFX0RJRkZFUkVOQ0UiLCJrZXlWYWx1ZSI6IiIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIk1BU1RJRkZfU1BPU19FTkFCTEVfUFJJTlRFUl9MQU5ESU5HX05FVyI6eyJrZXlEZXNjIjoiTUFTVElGRl9TUE9TX0VOQUJMRV9QUklOVEVSX0xBTkRJTkdfTkVXIiwia2V5VmFsdWUiOiJ0cnVlIiwiY2F0ZWdvcnlJZCI6MTMsInJlZ2lvbklkIjoxfSwiTUFTVElGRl9TUE9TX0VOQUJMRV9BTEwiOnsia2V5RGVzYyI6Ik1BU1RJRkZfU1BPU19FTkFCTEVfQUxMIiwia2V5VmFsdWUiOiJ0cnVlIiwiY2F0ZWdvcnlJZCI6MTMsInJlZ2lvbklkIjoxfSwiUEVSU09OQUxJU0FUSU9OX0NDIjp7ImtleURlc2MiOiJQRVJTT05BTElTQVRJT05fQ0MiLCJrZXlWYWx1ZSI6InVzLGZyLGluLGF1LGdiIiwiY2F0ZWdvcnlJZCI6MTMsInJlZ2lvbklkIjoxfSwiVE9ST05UT19CT1RfV0VCX1VSTCI6eyJrZXlEZXNjIjoiVE9ST05UT19CT1RfV0VCX1VSTCIsImtleVZhbHVlIjoiaHR0cHM6Ly92aXJ0dWFsYWdlbnQuaHBjbG91ZC5ocC5jb20/Qm90Q2xpZW50PXdlYndpZGdldCIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIkhQX0NPTV9MT0NBTEVTX01BUFBJTkciOnsia2V5RGVzYyI6IkhQX0NPTV9MT0NBTEVTX01BUFBJTkciLCJrZXlWYWx1ZSI6IntcImdiL2VuXCI6IFwidWsvZW5cIixcImJnL2VuXCI6IFwiYmcvYmdcIixcImhyL2VuXCI6IFwiaHIvaHJcIixcImVlL2VuXCI6IFwiZWUvZXRcIixcImx2L2VuXCI6IFwibHYvbHZcIixcImx0L2VuXCI6IFwibHQvbHRcIixcInJvL2VuXCI6IFwicm8vcm9cIixcInJzL2VuXCI6IFwicnMvc3JcIixcInNrL2VuXCI6IFwic2svc2tcIixcInNpL2VuXCI6XCJzaS9zbFwifSIsImNhdGVnb3J5SWQiOjEzLCJyZWdpb25JZCI6MX0sIkRNRF9MQyI6eyJrZXlEZXNjIjoiRE1EX0xDIiwia2V5VmFsdWUiOiJlbixlcyxwdCxqYSxrbyx0aCx6aCxmaSxjcyxmcixoZSxodSxpdCxubCxubyxwbCxydSxzdix0cixhcixkYSxkZSxlbCx6aC1oYW50LHpoLWhhbnMiLCJjYXRlZ29yeUlkIjoxMywicmVnaW9uSWQiOjF9fX0=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="233932578" offset="0" length="2311" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="5489" hostname="mastiff-itg.ext.hp.com" path="/gw/hpit/cs/mastiff.itg/1.0/content/js/supportweb/HP_scraper.js" url="https://mastiff-itg.ext.hp.com/gw/hpit/cs/mastiff.itg/1.0/content/js/supportweb/HP_scraper.js" ip="44.224.125.151" port="443" connectionId="15" origin="HTML" frame="1" startDateTime="2021-05-20T04:14:10.652+00:00" startTime="233931859" endTime="233932718">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Host" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bWFzdGlmZi1pdGcuZXh0LmhwLmNvbQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="sec-ch-ua" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IiBOb3QgQTtCcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9IjkwIiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjkwIg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="sec-ch-ua-mobile" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>PzA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkwLjAuNDQzMC4yMTIgU2FmYXJpLzUzNy4zNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Site" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>c2FtZS1zaXRl</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Mode" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bm8tY29ycw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Sec-Fetch-Dest" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>c2NyaXB0</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9wcHNzdXBwb3J0LWl0Z2xsYmg3LmluYy5ocC5jb20vdXMtZW4vcHJpbnRlcg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZSwgYnI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9ndy9ocGl0L2NzL21hc3RpZmYuaXRnLzEuMC9jb250ZW50L2pzL3N1cHBvcnR3ZWIvSFBfc2NyYXBlci5qcyBIVFRQLzEuMQ0KSG9zdDogbWFzdGlmZi1pdGcuZXh0LmhwLmNvbQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0Kc2VjLWNoLXVhOiAiIE5vdCBBO0JyYW5kIjt2PSI5OSIsICJDaHJvbWl1bSI7dj0iOTAiLCAiR29vZ2xlIENocm9tZSI7dj0iOTAiDQpzZWMtY2gtdWEtbW9iaWxlOiA/MA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzkwLjAuNDQzMC4yMTIgU2FmYXJpLzUzNy4zNg0KQWNjZXB0OiAqLyoNClNlYy1GZXRjaC1TaXRlOiBzYW1lLXNpdGUNClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc2NyaXB0DQpSZWZlcmVyOiBodHRwczovL3Bwc3N1cHBvcnQtaXRnbGxiaDcuaW5jLmhwLmNvbS91cy1lbi9wcmludGVyDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIGJyDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>100551</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xOS40</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMCBNYXkgMjAyMSAwNDoxMzo0NCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAwNTUx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-amzn-RequestId" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YzU1NTI2YjYtN2JmMS00ZTI1LWJkY2YtMWFmODYzMWE4MzNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="last-modified" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAxOSBNYXkgMjAyMSAxMDozMzowNiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-amzn-Remapped-content-length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAwNTUx</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-amzn-Remapped-connection" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Y2xvc2U=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-amz-apigw-id" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Zm5BLXhIU3pQSGNGbzZRPQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="etag" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Vy8iMTAwNTUxLTE2MjE0MjAzODY3OTIi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Amzn-Trace-Id" index="11">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Um9vdD0xLTYwYTVlMWY4LWNiY2Y0YjUzMzk3OGM2NWZkOWQ2MTNhNDtTYW1wbGVkPTA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="accept-ranges" index="12">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="x-amzn-Remapped-date" index="13">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyMCBNYXkgMjAyMSAwNDoxMzo0NCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTkuNA0KRGF0ZTogVGh1LCAyMCBNYXkgMjAyMSAwNDoxMzo0NCBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KQ29udGVudC1MZW5ndGg6IDEwMDU1MQ0KeC1hbXpuLVJlcXVlc3RJZDogYzU1NTI2YjYtN2JmMS00ZTI1LWJkY2YtMWFmODYzMWE4MzNhDQpsYXN0LW1vZGlmaWVkOiBXZWQsIDE5IE1heSAyMDIxIDEwOjMzOjA2IEdNVA0KeC1hbXpuLVJlbWFwcGVkLWNvbnRlbnQtbGVuZ3RoOiAxMDA1NTENCngtYW16bi1SZW1hcHBlZC1jb25uZWN0aW9uOiBjbG9zZQ0KeC1hbXotYXBpZ3ctaWQ6IGZuQS14SFN6UEhjRm82UT0NCmV0YWc6IFcvIjEwMDU1MS0xNjIxNDIwMzg2NzkyIg0KWC1BbXpuLVRyYWNlLUlkOiBSb290PTEtNjBhNWUxZjgtY2JjZjRiNTMzOTc4YzY1ZmQ5ZDYxM2E0O1NhbXBsZWQ9MA0KYWNjZXB0LXJhbmdlczogYnl0ZXMNCngtYW16bi1SZW1hcHBlZC1kYXRlOiBUaHUsIDIwIE1heSAyMDIxIDA0OjEzOjQ0IEdNVA0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="233932718" offset="0" length="16384" />
          <PacketInfo time="233932718" offset="16384" length="16384" />
          <PacketInfo time="233932781" offset="32768" length="16384" />
          <PacketInfo time="233932781" offset="49152" length="16384" />
          <PacketInfo time="233932781" offset="65536" length="16384" />
          <PacketInfo time="233932796" offset="81920" length="16384" />
          <PacketInfo time="233932812" offset="98304" length="2798" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>